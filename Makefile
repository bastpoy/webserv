.DEFAULT_GOAL := all

# Colors and Styles
RED			:= \033[0;31m
GREEN		:= \033[0;32m
YELLOW		:= \033[0;33m
BLUE		:= \033[0;34m
MAGENTA		:= \033[0;35m
CYAN		:= \033[0;36m
RESET		:= \033[0m
BOLD		:= \033[1m
UNDERLINE	:= \033[4m

# Executable name
NAME		:=	webserv

# Source directories and files
SRCS_DIR	:=	srcs
SRCS		=	srcs/main.cpp \
				srcs/resHeader.cpp \
				srcs/Socket.cpp

# Object directories and files
OBJS_DIR	:=	.objs
OBJS		:=	$(patsubst $(SRCS_DIR)/%.cpp, $(OBJS_DIR)/%.o, $(SRCS))

# Dependency directory
DEPS_DIR	:=	.deps
DEPS		:=	$(patsubst $(OBJS_DIR)/%.o, $(DEPS_DIR)/%.d, $(OBJS))

# Compiler and flags
CXX			:=	c++ $(CXXFLAGS)
CXXFLAGS	:=	-Werror -Wall -Wextra -std=c++98 -g3
DEPFLAGS	:=	-MMD -MP -MF
INCFLAGS	:=	-Iincludes
RM			:=	rm -rf

# Include automatically generated dependency files
-include $(DEPS)

# Build the executable
$(NAME): $(OBJS)
	@$(CXX) -o $(NAME) $(OBJS)

# Compile source files into object files
$(OBJS_DIR)/%.o: $(SRCS_DIR)/%.cpp Makefile
	@mkdir -p $(dir $@) $(DEPS_DIR)
	@echo "Compiling $<..."
	@$(CXX) $(INCFLAGS) -c $< -o $@ $(DEPFLAGS) $(DEPS_DIR)/$*.d

all: $(NAME)

# Display help information
help:
	@echo "$(BLUE)Makefile commands:$(RESET)"
	@echo "  make				Build the project (default target)"
	@echo "  make all			Build the project"
	@echo "  make clean			Remove object files and dependency files"
	@echo "  make fclean			Remove all files generated by the build"
	@echo "  make re			Clean and rebuild the project"
	@echo "  make help			Display this help message"
	@echo "  make info			Show information about the project"

# Display project information
info:
	@echo "$(GREEN)Project: $(NAME)$(RESET)"
	@echo "Source directory: $(SRCS_DIR)"
	@echo "Object directory: $(OBJS_DIR)"
	@echo "Dependency directory: $(DEPS_DIR)"
	@echo "Source files: $(SRCS)"
	@echo "Object files: $(OBJS)"

# Check for issues
check:
	@echo "$(YELLOW)Checking for syntax errors...$(RESET)"
	@$(CXX) -fsyntax-only $(SRCS)
	@echo "$(YELLOW)Running static analysis with cppcheck...$(RESET)"
	@cppcheck --enable=all $(SRCS_DIR)
	@echo "$(YELLOW)Running static analysis with clang-tidy...$(RESET)"
	@clang-tidy $(SRCS) -- -I./includes
	@echo "$(YELLOW)Checking for coding style with clang-format...$(RESET)"
	@clang-format -style=Google -output-replacements-xml $(SRCS) | grep -c "<replacement"

# Clean object and dependency files
clean:
	@echo "$(RED)Cleaning up object files...$(RESET)"
	@$(RM) $(OBJ)
	@$(RM) $(OBJS_DIR)
	@$(RM) $(DEPS_DIR)

# Clean executable
fclean:	clean
	@echo "$(RED)Cleaning up $(NAME)...$(RESET)"
	@$(RM) $(NAME)

# Rebuild everything
re:		fclean all

# Phony targets
.PHONY: all clean fclean re

